version: 2.0

jobs:
  Python2:
      docker:
        - image: circleci/python:2.7
      steps: &steps
        - checkout
        - run: sudo apt-get update
        - run: sudo apt-get install tk-dev pkg-config python-dev python-tk
        - run: sudo pip install nose coverage pytest pytest-cov
        - run: pip install -r requirements.txt --user
        - run: python --version ; pip --version ; pwd ; ls

        - run: mkdir results && mkdir test-reports
        - run: python experiments/run_dataset_generate.py --nb_samples 25 --nb_patterns 2 --image_size 64 64
        - run: python experiments/run_dataset_add_noise.py -p data_images
        - run: coverage run --source=bpdl,experiments -m py.test bpdl experiments -v --doctest-modules --junitxml=test-reports/pytest_junit.xml

        # EXPERIMENTS - pre-processing
        - run: rm -r results && mkdir results
        - run: python experiments/run_cut_minimal_images.py -in "data_images/imaginal_discs/gene/*.png" -out data_images/imaginal_discs/gene_cut
        - run: python experiments/run_extract_fuzzy_activation.py -in "data_images/ovary_stage-2/image/*.png" -out data_images/ovary_stage-2/gene
        - run: python experiments/run_extract_fuzzy_activation.py -in "data_images/ovary_stage-3/image/*.png" -out data_images/ovary_stage-3/gene
        # EXPERIMENTS
        - run: python experiments/run_experiments.py --type synth -in data_images/syntheticDataset_vX -out results
        - run: python experiments/run_experiments.py --type real -in data_images/imaginal_discs -out results --dataset gene_small
        # EXPERIMENTS - post-processing
        - run: python experiments/run_parse_experiments_result.py -p results -res results.csv
        - run: python experiments/run_recompute_experiments_result.py -p results
        - run: python experiments/run_parse_experiments_result.py -p results -res results_NEW.csv

        # POST-TEST
        - run: python setup.py install --user
        - run: coverage report && coverage xml -o test-reports/coverage.xml

        - store_test_results:
            path: test-reports
        - store_artifacts:
            path: test-reports


  Python3:
      docker:
        - image: circleci/python:3.6
      steps: *steps

workflows:
  version: 2
  build:
    jobs:
      - Python2
      - Python3
