version: 2.0

references:

  install_deps: &install_deps
    run:
      name: Install Packages
      command: |
        sudo apt-get update -qq --fix-missing
        sudo apt-get install tk-dev pkg-config python-dev python-tk

  install_pips: &install_pips
    run:
      name: Install PyPI dependences
      command: |
        sudo pip install nose coverage pytest pytest-cov flake8
        sudo pip install -U backports.functools_lru_cache  # required for matplotlib @py2
        pip install -r requirements.txt --user
        pip list

  test_coverage: &test_coverage
    run:
      name: Testing and Formating
      command: |
        unset DISPLAY
        python --version ; pip --version ; pwd ; ls -l
        rm -rf data_images/syntheticDataset_vX
        mkdir results && mkdir test-reports
        python setup.py check -m -s
        python experiments/run_dataset_generate.py --nb_samples 25 --nb_patterns 2 --image_size 64 64
        python experiments/run_dataset_add_noise.py -p ./data_images
        coverage run --source=bpdl,experiments -m py.test bpdl experiments -v --doctest-modules --junitxml=test-reports/pytest_junit.xml
        flake8 . --ignore=E402,E731 --max-line-length=100

  make_docs: &make_docs
    run:
      name: Make Documentation
      command: |
        sudo apt-get install pandoc
        sudo pip install -r docs/requirements.txt
        # sphinx-apidoc -o ./docs/source ./imsegm **/tests/* --force --follow-links
        cd docs; make html

jobs:
  Py2:
    docker:
      - image: circleci/python:2.7
    steps: &steps
    - checkout
    - *install_deps
    - *install_pips
    - *test_coverage
    - *make_docs

    - run:
        name: Experiments (pre-processing)
        command: |
          rm -rf results && mkdir results
          python experiments/run_cut_minimal_images.py -i "./data_images/imaginal_discs/gene/*.png" -o ./data_images/imaginal_discs/gene_cut
          python experiments/run_extract_fuzzy_activation.py -i "./data_images/ovary_stage-2/image/*.png" -o ./data_images/ovary_stage-2/gene
          python experiments/run_extract_fuzzy_activation.py -i "./data_images/ovary_stage-3/image/*.png" -o ./data_images/ovary_stage-3/gene
    - run:
        name: Experiments (main body)
        command: |
          python experiments/run_experiments.py --type synth -i ./data_images/syntheticDataset_vX -o ./results -c ./data_images/sample_config.yml
          python experiments/run_experiments.py --type real -i ./data_images/imaginal_discs -o ./results --dataset gene_small --nb_workers 2
          python experiments/run_reconstruction.py -e ./results/ExperimentBPDL_real_imaginal_discs_gene_small --visual
    - run:
        name: Experiments (post-processing)
        command: |
          python experiments/run_parse_experiments_result.py -i ./results -r results.csv
          python experiments/run_recompute_experiments_result.py -i ./results
          python experiments/run_parse_experiments_result.py -i ./results -r results_NEW.csv

    # PASSING
    - run:
        name: Finalise
        command: |
          python setup.py install --user --dry-run
          coverage report && coverage xml -o test-reports/coverage.xml

    - store_test_results:
        path: test-reports
    - store_artifacts:
        path: test-reports

  Py3:
    docker:
      - image: circleci/python:3.6
    steps: *steps

workflows:
  version: 2
  build:
    jobs:
      - Py2
      - Py3
